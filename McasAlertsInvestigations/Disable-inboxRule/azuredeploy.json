{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
        "logicAppName": {
            "defaultValue": "Disable-InboxRule",
            "type": "String",
            "metadata": {
                "description": "Name of the logic app."
            }
        },
        "servicePrincipal": {
            "type": "secureObject"
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location of the logic app."
            }
        },
        "mcasAPI": {
            "type": "secureobject"
        },
        "azuresentinel_Connection_Name": {
            "defaultValue": "azuresentinel",
            "type": "String",
            "metadata": {
                "description": "Azure Sentinel connection"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('azuresentinel_Connection_Name')]",
            "location": "[parameters('location')]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'azuresentinel')]"
                },
                "displayName": "[parameters('azuresentinel_Connection_Name')]"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2016-06-01",
            "name": "[parameters('logicAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('azuresentinel_Connection_Name')]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "servicePrincipal": {
                            "type": "secureobject",
                            "defaultValue": "[parameters('servicePrincipal')]"
                        },
                        "mcasAPI": {
                            "defaultValue": "[parameters('mcasAPI')]",
                            "type": "secureobject"
                        },
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            },
                            "type": "ApiConnectionWebhook"
                        }
                    },
                    "actions": {
                        "Initialize_entities": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "entities",
                                        "type": "array",
                                        "value": "@triggerBody()?['Entities']"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Entities_parsing": {
                            "actions": {                                
                                "Get_username": {
                                    "inputs": {
                                        "from": "@variables('entities')",
                                        "where": "@equals(item()['Type'], 'account')"
                                    },
                                    "runAfter": {},
                                    "type": "Query"
                                },
                                "Compose_UPN": {
                                    "inputs": "@concat(body('Get_username')[0]['Name'], '@', body('Get_username')[0]['UPNSuffix'])",
                                    "runAfter": {
                                        "Get_username": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose"
                                },                                
                                "Get_alertLink": {
                                    "inputs": {
                                        "from": "@triggerBody()?['ExtendedLinks']",
                                        "where": "@contains(item()['Label'], 'alert')"
                                    },
                                    "runAfter": {
                                        "Compose_UPN": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query"
                                },
                                "Extract_alertId": {
                                    "inputs": "@last(split(body('Get_alertLink')[0]['Href'], '/'))",
                                    "runAfter": {
                                        "Get_alertLink": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose"
                                }
                            },
                            "runAfter": {
                                "Initialize_entities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "User": {
                            "actions": {
                                "Get_user_details": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com/",
                                            "clientId": "[parameters('servicePrincipal').clientId]",
                                            "secret": "[parameters('servicePrincipal').clientSecret]",
                                            "tenant": "[parameters('servicePrincipal').tenantId]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/beta/users/@{outputs('Compose_UPN')}"
                                    }
                                },
                                "Switch": {
                                    "runAfter": {
                                        "Get_user_details": [
                                            "Failed",
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Case_200_OK": {
                                            "case": 200,
                                            "actions": {
                                                   
                                                                                             
                                                "Get_user_manager": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com/",
                                                            "clientId": "[parameters('servicePrincipal').clientId]",
                                                            "secret": "[parameters('servicePrincipal').clientSecret]",
                                                            "tenant": "[parameters('servicePrincipal').tenantId]",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/beta/users/@{body('Get_user_details')?['userPrincipalName']}/manager"
                                                    }
                                                }
                                                
                                                
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {
                                            "Response_user_unknown": {
                                                "runAfter": {},
                                                "type": "Response",
                                                "kind": "Http",
                                                "inputs": {
                                                    "body": "@body('Get_user_details')",
                                                    "statusCode": "@outputs('Get_user_details')['statusCode']"
                                                }
                                            },
                                            "Terminate": {
                                                "runAfter": {
                                                    "Response_user_unknown": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Terminate",
                                                "inputs": {
                                                    "runStatus": "Succeeded"
                                                }
                                            }
                                        }
                                    },
                                    "expression": "@outputs('Get_user_details')['statusCode']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {
                                "Entities_parsing": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Inbox_rule": {
                            "actions": {
                                "Get_MCAS_alert_details": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Authorization": "[concat('token ',parameters('mcasAPI').apiToken)]"
                                        },
                                        "method": "GET",
                                        "uri": "[concat(parameters('mcasAPI').tenantUrl, '/cas/api/v1/alerts/', '@{outputs(''Extract_alertId'')}', '/')]"
                                    }
                                    
                                },
                                "Filter_inbox_entities": {
                                    "inputs": {
                                        "from": "@body('Get_MCAS_alert_details')?['entities']",
                                        "where": "@equals(item()?['type'], 'ruleName')"
                                    },
                                    "runAfter": {
                                        "Get_MCAS_alert_details": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query"
                                },
                                "Get_inbox_rule_ID": {
                                    "runAfter": {
                                        "Filter_inbox_entities": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com/",
                                            "clientId": "[parameters('servicePrincipal').clientId]",
                                            "secret": "[parameters('servicePrincipal').clientSecret]",
                                            "tenant": "[parameters('servicePrincipal').tenantId]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/v1.0/users/@{outputs('Compose_UPN')}/mailFolders/inbox/messageRules?$filter=displayName eq '@{body('Filter_inbox_entities')?[0]?['label']}'"
                                    }
                                }

                            },
                            "runAfter": {
                                "User": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Compose_message": {
                            "actions": {
                                "Message": {
                                    "inputs": {                                        
                                        "userPrincipalName": "@outputs('Compose_UPN')"
                                    },
                                    "runAfter": {},
                                    "type": "Compose"
                                }
                            },
                            "runAfter": {
                                "Inbox_rule": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Resolve_Cloud_App_Security_alert": {
                            "runAfter": {
                                "Compose_message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "filters": {
                                        "id": {
                                            "eq": [
                                                "@{outputs('Extract_alertId')}"
                                            ]
                                        }
                                    },
                                    "comment": "Resolved using Automation - Malicious inbox rule disabled"
                                },
                                "headers": {
                                    "Authorization": "[concat('token ',parameters('mcasAPI').apiToken)]"
                                },
                                "method": "POST",
                                "uri": "[concat(parameters('mcasAPI').tenantUrl, '/cas/api/v1/alerts/resolve/')]"
                            }
                            
                        },
                        "Change_incident_status": {
                            "inputs": {
                                "body": {
                                    "CloseReason": "FalsePositive",
                                    "CloseReasonText": "@{outputs('Message')}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "path": "/Case/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Alert')}/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}/Status/@{encodeURIComponent('Closed')}"
                            },
                            "runAfter": {
                                "Resolve_Cloud_App_Security_alert": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Add_comment_to_incident_closed": {
                            "inputs": {
                                "body": {
                                    "Value": "Alert resolved using automation"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "path": "/Comment/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Alert')}/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                            },
                            "runAfter": {
                                "Change_incident_status": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        }                  
                        
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuresentinel_Connection_Name'))]",
                                "connectionName": "[parameters('azuresentinel_Connection_Name')]" ,
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
        
    ],
    "outputs": {
        
        "logicAppUrl": {
            "type": "string",
            "value": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows/', parameters('logicAppName')), '/triggers/When_a_response_to_an_Azure_Sentinel_alert_is_triggered'), '2016-06-01').value]"
        }
    }
}